#include <YSI_Coding\y_hooks>

#define MAX_VAGAS_PARKING 96

new Vehicle_VagaParking[MAX_VEHICLES] = -1;

enum parkinfo_enum
{
    bool:areapark_used,
    areapark_vehicleid
};
new ParkingInfo[MAX_VAGAS_PARKING][parkinfo_enum];

enum areapark_enum
{
    Float:areapark_x,
    Float:areapark_y,
    Float:areapark_z,
    Float:areapark_a
};

new Rnd_AreaParking[MAX_VAGAS_PARKING][areapark_enum] = 
{
	{ 2286.6592, 1953.0339, 31.7797, 126.9141 },
	{ 2272.6531, 1954.1931, 31.7797, 184.0748 },
	{ 2269.1157, 1953.9525, 31.7797, 176.6174 },
	{ 2268.9392, 1973.3975, 31.7797, 356.5602 },
	{ 2272.5447, 1973.6252, 31.7797, 356.3847 },
	{ 2276.1504, 1973.8232, 31.7797, 356.3847 },
	{ 2279.7471, 1974.0573, 31.7797, 356.3847 },
	{ 2283.5203, 1973.6941, 31.7797, 351.3839 },
	{ 2250.8003, 1973.2632, 31.7797, 354.6300 },
	{ 2247.2236, 1972.8782, 31.7797, 354.6300 },
	{ 2243.4204, 1973.6470, 31.7797, 354.6300 },
	{ 2239.6428, 1973.4343, 31.7797, 354.6300 },
	{ 2235.7649, 1973.7760, 31.7797, 354.6300 },
	{ 2250.7202, 1940.2035, 26.2993, 185.5121 },
	{ 2246.8813, 1940.1273, 26.2993, 185.7753 },
	{ 2243.3318, 1940.8693, 26.2993, 185.7753 },
	{ 2239.7781, 1940.2936, 26.2993, 172.3519 },
	{ 2236.1982, 1940.7660, 26.2993, 179.3706 },
	{ 2235.9617, 1953.6028, 26.2993, 185.0731 },
	{ 2239.3696, 1953.0713, 26.2993, 177.9667 },
	{ 2243.5247, 1953.3673, 26.2993, 177.9667 },
	{ 2247.1438, 1952.7970, 26.2993, 177.9667 },
	{ 2250.8750, 1952.9562, 26.2993, 177.9667 },
	{ 2251.1531, 1973.7631, 26.2993, 357.8214 },
	{ 2247.3833, 1973.8827, 26.2993, 357.8214 },
	{ 2243.3572, 1973.3237, 26.2993, 357.8214 },
	{ 2239.8433, 1973.6024, 26.2993, 357.8214 },
	{ 2236.1448, 1972.7811, 26.2993, 3.6997 },
	{ 2219.7166, 1956.7909, 26.2993, 260.4979 },
	{ 2220.7522, 1952.4825, 26.2993, 260.4979 },
	{ 2220.1926, 1948.7496, 26.2993, 256.6379 },
	{ 2220.8401, 1945.0922, 26.2993, 250.1458 },
	{ 2250.8447, 1940.9371, 20.8221, 176.1853 },
	{ 2247.1504, 1940.8807, 20.8221, 176.1853 },
	{ 2243.3862, 1940.6826, 20.8221, 176.1853 },
	{ 2239.7173, 1940.5144, 20.8221, 176.1853 },
	{ 2236.3489, 1940.3099, 20.8221, 176.1853 },
	{ 2236.3325, 1953.7963, 20.8221, 176.6509 },
	{ 2240.0154, 1953.1943, 20.8221, 176.8263 },
	{ 2243.2090, 1954.1267, 20.8221, 187.0913 },
	{ 2246.9556, 1953.6838, 20.8221, 179.4584 },
	{ 2250.5930, 1953.1980, 20.8221, 179.4584 },
	{ 2250.9373, 1973.4760, 20.8221, 0.4541 },
	{ 2247.4338, 1973.7480, 20.8221, 2.8229 },
	{ 2243.6443, 1973.9800, 20.8221, 2.8229 },
	{ 2240.3049, 1974.2297, 20.8221, 2.8229 },
	{ 2236.3992, 1974.4623, 20.8221, 2.8229 },
	{ 2219.7466, 1956.4493, 20.8221, 266.4645 },
	{ 2220.0737, 1952.8761, 20.8221, 266.4645 },
	{ 2221.0046, 1948.6034, 20.8221, 266.4645 },
	{ 2220.9917, 1944.7135, 20.8221, 262.1655 },
	{ 2250.5559, 1940.6261, 15.3464, 182.1505 },
	{ 2246.9753, 1940.0929, 15.3464, 182.1505 },
	{ 2243.2839, 1939.5371, 15.3464, 182.1505 },
	{ 2239.7908, 1940.8414, 15.3464, 177.5005 },
	{ 2236.1123, 1940.7032, 15.3464, 177.5005 },
	{ 2235.8650, 1954.2744, 15.3464, 184.1684 },
	{ 2239.7935, 1954.1637, 15.3464, 184.1684 },
	{ 2243.3696, 1954.0149, 15.3464, 184.1684 },
	{ 2246.8147, 1953.8271, 15.3464, 184.1684 },
	{ 2250.3958, 1953.6614, 15.3464, 184.1684 },
	{ 2250.9595, 1973.5195, 15.3464, 1.6546 },
	{ 2247.3723, 1973.2373, 15.3464, 1.3036 },
	{ 2243.4453, 1973.5490, 15.3464, 1.3036 },
	{ 2239.6958, 1973.8812, 15.3464, 1.3036 },
	{ 2236.1860, 1974.2288, 15.3464, 1.3036 },
	{ 2220.5076, 1956.3915, 15.3464, 268.7441 },
	{ 2220.8640, 1952.4966, 15.3464, 268.7441 },
	{ 2221.2236, 1948.4911, 15.3464, 268.7441 },
	{ 2221.5535, 1944.3851, 15.3464, 268.7441 },
	{ 2221.8940, 1940.5449, 15.3464, 268.7441 },
	{ 2222.2246, 1936.1685, 15.3464, 268.7441 },
	{ 2250.8242, 1940.1523, 9.8671, 180.3336 },
	{ 2246.8252, 1941.3179, 9.8671, 180.3336 },
	{ 2243.4932, 1940.5690, 9.8671, 174.5430 },
	{ 2240.0305, 1940.8978, 9.8671, 176.5609 },
	{ 2236.0747, 1940.5029, 9.8671, 175.0694 },
	{ 2235.9004, 1953.5903, 9.8671, 184.8958 },
	{ 2239.8525, 1954.4906, 9.8671, 184.8958 },
	{ 2243.4333, 1954.3730, 9.8671, 180.2459 },
	{ 2246.9036, 1953.9709, 9.8671, 180.1582 },
	{ 2250.8557, 1954.1067, 9.8671, 180.1582 },
	{ 2251.0137, 1973.4427, 9.8671, 358.0402 },
	{ 2247.5020, 1972.8727, 9.8671, 0.8478 },
	{ 2243.4795, 1973.2866, 9.8671, 357.7771 },
	{ 2240.1355, 1973.8500, 9.8671, 357.7771 },
	{ 2236.4644, 1973.0601, 9.8671, 2.3394 },
	{ 2220.1233, 1956.1786, 9.8671, 273.7888 },
	{ 2220.7942, 1952.4587, 9.8671, 273.7888 },
	{ 2220.5051, 1948.6018, 9.8671, 262.2958 },
	{ 2220.6448, 1944.7303, 9.8671, 265.4543 },
	{ 2220.6931, 1941.1733, 9.8671, 261.4186 },
	{ 2220.4648, 1936.4958, 9.8671, 255.8916 },
	{ 2220.9907, 1931.9269, 9.8671, 272.8243 },
	{ 2222.4189, 1956.4469, 31.5067, 271.4466 },
	{ 2222.4189, 1946.4469, 31.5067, 271.4466 }
};

task SetVehicleInAreaParking[60000]() {
    new string[128];
	new vehicle_name[30];

    for (new vehicleid; vehicleid < MAX_VEHICLES; vehicleid++) {
        
        if (!Vehicle_IsCar(vehicleid))
            continue;

        if (GetVehicleInAreaParking(vehicleid) && !IsVehicleOccupied(vehicleid)) {
            foreach (new i : Player) { 
                for (new carro; carro < MAX_PLAYER_CARROS; carro++) {
                    if (PlayerConce[i][carro][conce_vid] == vehicleid) {
						GetModelStaticNameFromId(GetVehicleModel(vehicleid), vehicle_name);

                        format(string, sizeof(string), "Seu {00FFFF}%s {FFFFFF}foi levado ao {FFF000}%dº {FFFFFF}andar do estacionamento mais próximo.", vehicle_name);
                        SendClientMessage(i, -1, string);
                        SendClientMessage(i, -1, "Agora você paga $100 por payday para deixar o veiculo no estacionamento!");
                    }
                }
            }
            for (new vagas; vagas < MAX_VAGAS_PARKING; vagas++) {
                if (!ParkingInfo[vagas][areapark_used]) {
                    ParkingInfo[vagas][areapark_used] = true;
                    ParkingInfo[vagas][areapark_vehicleid] = vehicleid;
                    Vehicle_VagaParking[vehicleid] = vagas;

                    SetVehiclePos(vehicleid, Rnd_AreaParking[vagas][areapark_x], Rnd_AreaParking[vagas][areapark_y], Rnd_AreaParking[vagas][areapark_z]);
                    SetVehicleZAngle(vehicleid, Rnd_AreaParking[vagas][areapark_a]);
                    SetVehicleVirtualWorld(vehicleid, 84 + PROP_VW);

                    continue;
                }
            }
        }
    }
}

static GetVehicleInAreaParking(vehicleid) {

    if (GetVehicleVirtualWorld(vehicleid) != 0) return false;

    new Float:x, Float:y, Float:z;
    GetVehiclePos(vehicleid, x, y, z);

    if (x >= 1395.66284179 && y >= -1779.92749023 && x <= 1625.66284179 && y <= -1539.92749023) // Estacionamento DP LS
        return true;

    return false;
}